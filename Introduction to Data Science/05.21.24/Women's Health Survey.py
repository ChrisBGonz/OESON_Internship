# -*- coding: utf-8 -*-
"""Statistics_05/21.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bc0bZShQKK1bPtEZzqwjrr4oVwwmGQwO

# About the data

Womens Health Survey

In 1985, the USDA commissioned a study of women’s nutrition. Nutrient intake was measured for a random sample of 737 women aged 25-50 years. The following variables were measured:

- Calcium(mg)
- Iron(mg)
- Protein(g)
- Vitamin A(μg)
- Vitamin C(mg)

## Descriptive Analysis

We are going to analyze the dataset on the basis of descriptive analysis functions that will help us in understanding the pattern and behavior of the data.
"""

#Import all the libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

#Load the dataset
data = pd.read_csv("nutrient.csv")

data.head(10)

print("Column Names: ")
print(data.columns)

print("\nData Types: ")
print(data.dtypes)

data.describe()

#Measure of Central Tendency
print("Mean: ")
print(data.mean())

print("\nMedian: ")
print(data.median())

print("\nMode: ")
print(data.mode())

#Measure of Dispersion
print("Variance: ")
print(data.var())

print("\nStandard Deviation: ")
print(data.std())

print("\nRange: ")
print(data.max() - data.min())

#Measure of Frequency
print("Frequency and Count")

for col in data.columns:
  print(f"\nFrequency distribution for {col}: ")
  print(data[col].value_counts())

#Skewness and Kurtosis

print("\nSkewness: ")
print(data.skew())

print("\nKurtosis: ")
print(data.kurtosis())

#Graph Analysis: Bar Chart

plt.figure(figsize = (8,4))
plt.bar(data["id"], data["calcium"], color = "green", label = "calcium")
plt.xlabel("ID")
plt.ylabel("Calcium")
plt.title("Calcium Levels by ID")
plt.legend()
plt.show()

#Graph Analysis: Histogram Chart

plt.figure(figsize = (8,4))
plt.hist(data["calcium"], bins = 10, color = "blue", label = "calcium")
plt.xlabel("ID")
plt.ylabel("Calcium")
plt.title("Calcium Levels by ID")
plt.legend()
plt.show()

#Graph Analysis: Box Plot

for c in data.columns[1: ]:
  sns.boxplot(x = data[c])

  plt.title(f"Box Plots by ID {c}")
  plt.xlabel("Values")
  plt.legend()
  plt.show()

#Graph Analysis: Scatter Plot

sns.pairplot(data.drop("id", axis = 1), diag_kind = "kde")
plt.suptitle("PairPlot")
plt.show()
